name: check

on: [pull_request]

jobs:
  build:
    environment: Production Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install yarn
        run: npm install -g yarn
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ~/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn test
      - run: yarn build
        env:
          VITE_API_KEY: ${{ secrets.API_KEY }}
          VITE_APP_ID: ${{ secrets.APP_ID }}
          VITE_AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          VITE_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          VITE_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
  deploy_for_preview:
    environment: Production Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install yarn
        run: npm install -g yarn
      - uses: actions/cache@v4
        with:
          path: ~/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn build
        env:
          VITE_API_KEY: ${{ secrets.API_KEY }}
          VITE_APP_ID: ${{ secrets.APP_ID }}
          VITE_AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          VITE_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          VITE_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
      - name: Firebase Preview Deploy
        if: ${{ github.repository_owner == 'tegehoge' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          expires: 10d
          projectId: leaction
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
